{
  "openapi": "3.0.0",
  "info": {
    "title": "Library Management App",
    "description": "Api para gestão de bibliotecas.",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Servidor principal para desenvolvimento."
    }
  ],
  "paths": {
    "/staff/register": {
      "post": {
        "summary": "Registrar novo Staff User",
        "description": "Registrar um novo Staff User no aplicativo.",
        "tags": ["Staff"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Campos para registrar um novo Staff User",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterStaffRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Membro da equipe registrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RegisterStaffResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar membro da equipe"
          }
        }
      }
    },
    "/staff/login": {
      "post": {
        "summary": "Entrar no aplicativo.",
        "description": "Entrar no aplicativo como Staff User.",
        "tags": ["Staff"],
        "requestBody": {
          "description": "Campos para entrar no aplicativo.",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/LoginStaffRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuário entrou com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/LoginStaffResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao entrar no software!"
          }
        }
      }
    },
    "/staff/viewstaffs": {
      "get": {
        "summary": "Ver todos os Staffs.",
        "description": "Ver todos os Staffs cadastrados.",
        "tags": ["Staff"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Membros da equipe encontrados com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewStaffsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelos membros da equipe. Tente novamente mais tarde!"
          }
        }
      }
    },
    "/staff/detail/{userid}": {
      "get": {
        "summary": "Mostrar todas as informações de um usuário.",
        "description": "Mostrar detalhes de um usuário.",
        "tags": ["Staff"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "ID do usuário a ser exibido.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Membro da equipe encontrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailStaffResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelo usuário!"
          }
        }
      }
    },
    "/staff/edit/{userid}": {
      "patch": {
        "summary": "Editar dados de um Staff User.",
        "description": "Editar dados de um usuário pelo id.",
        "tags": ["Staff"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "ID do usuário.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos opicionais para editar um Staff User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/EditStaffRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Membro da equipe registrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/EditStaffResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar membro da equipe"
          }
        }
      }
    },
    "/staff/changepassword/{userid}": {
      "patch": {
        "summary": "Alterar a senha de um Staff User.",
        "description": "Alterar a senha de um usuário pelo id.",
        "tags": ["Staff"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "ID do usuário.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos para para alterar a senha de um Staff User",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/ChangeStaffPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Senha alterada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ChangeStaffPasswordResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar membro da equipe"
          }
        }
      }
    },
    "/staff/delete/{userid}": {
      "delete": {
        "summary": "Deletar um Staff User.",
        "description": "Deletar um usuário pelo id.",
        "tags": ["Staff"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "ID do usuário.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário deletado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DeleteStaffResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao deletar membro da equipe"
          }
        }
      }
    },
    "/mbrclassifydm/register": {
      "post": {
        "summary": "Registrar novo tipo de usuário",
        "description": "Registrar um novo tipo de usuário no aplicativo.",
        "tags": ["Member_Classify_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Campos para registrar um novo tipo de usuário",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterMbrClassifyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Membro da equipe registrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RegisterMbrClassifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar membro da equipe"
          }
        }
      }
    },
    "/mbrclassifydm/viewall": {
      "get": {
        "summary": "Ver todos os tipos de usuários.",
        "description": "Ver todos os tipos de usuários cadastrados.",
        "tags": ["Member_Classify_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Tipos de usuários encontrados com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewClassifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar por tipos de membros"
          }
        }
      }
    },
    "/mbrclassifydm/detail/{code}": {
      "get": {
        "summary": "Mostrar todas as informações de um tipo de usuário.",
        "description": "Mostrar detalhes de um tipo de usuário.",
        "tags": ["Member_Classify_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "ID do tipo de usuário a ser exibido.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tipo de usuário da equipe encontrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailClassifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelo tipo de usuário!"
          }
        }
      }
    },
    "/mbrclassifydm/edit/{code}": {
      "patch": {
        "summary": "Editar dados de um tipo de usuário.",
        "description": "Editar dados de um tipo de usuário pelo id.",
        "tags": ["Member_Classify_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "ID do tipo de usuário.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos opicionais para editar um tipo de membro",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/EditMbrClassifyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tipo de membro da equipe atualizado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/EditMbrClassifyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao atualizar um tipo de membro da equipe"
          }
        }
      }
    },
    "/mbrclassifydm/delete/{code}": {
      "delete": {
        "summary": "Deletar um tipo de usuário.",
        "description": "Deletar um tipo de usuário pelo code.",
        "tags": ["Member_Classify_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "ID do tipo de usuário.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tipo de usuário deletado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DeleteCategoryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao deletar tipo usuário"
          }
        }
      }
    },
    "/mbrfieldsdm/register": {
      "post": {
        "summary": "Registrar novo campo de usuário",
        "description": "Registrar um novo campo de usuário no aplicativo.",
        "tags": ["Member_Fields_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Campos para registrar um novo campo de usuário",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterMbrFieldRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Campo de usuário registrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RegisterMbrFieldResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar campo de usuário"
          }
        }
      }
    },
    "/mbrfieldsdm/viewfields": {
      "get": {
        "summary": "Ver todos os campos de usuários.",
        "description": "Ver todos os campos de usuários cadastrados.",
        "tags": ["Member_Fields_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Campos de usuário encontrados com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewFieldsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar por campos de membros"
          }
        }
      }
    },
    "/mbrfieldsdm/detail/{code}": {
      "get": {
        "summary": "Mostrar todas as informações de um campo de usuário.",
        "description": "Mostrar detalhes de um campo de usuário.",
        "tags": ["Member_Fields_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "ID do campo de usuário a ser exibido.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Campo de usuário da equipe encontrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailFieldResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelo campo de usuário!"
          }
        }
      }
    },
    "/mbrfieldsdm/edit/{code}": {
      "patch": {
        "summary": "Editar dados de um campo de usuário.",
        "description": "Editar dados de um campo de usuário pelo id.",
        "tags": ["Member_Fields_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "ID do tipo de usuário.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos opicionais para editar um campo de membro",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/EditMbrFieldRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Campo de usuário atualizado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/EditMbrFieldResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao atualizar um tipo de usuário"
          }
        }
      }
    },
    "/mbrfieldsdm/delete/{code}": {
      "delete": {
        "summary": "Deletar um campo de usuário.",
        "description": "Deletar um campo de usuário pelo code.",
        "tags": ["Member_Fields_DM"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "ID do campo de usuário.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Campo de usuário deletado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DeleteFieldResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao deletar campo usuário"
          }
        }
      }
    },
    "/member/register": {
      "post": {
        "summary": "Registrar um novo membro",
        "description": "Registrar um novo membro no aplicativo.",
        "tags": ["Member"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Campos para registrar um novo membro",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterMemberRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Membro registrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RegisterMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar membro da equipe"
          }
        }
      }
    },
    "/member/search": {
      "get": {
        "summary": "Buscar por membro(s)",
        "description": "Buscar membro(s) pelo número do cartão, nome ou email.",
        "tags": ["Member"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "method",
            "required": false,
            "description": "Método de pesquisa (name, barcode, email)",
            "schema": {
              "type": "string",
              "enum": ["name", "barcode", "email"]
            }
          },
          {
            "in": "query",
            "name": "data",
            "required": false,
            "description": "Valor para buscar (nome, número do cartão ou email)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Membro encontrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/FindMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar o membro",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Erro ao buscar membro."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/member/viewmembers": {
      "get": {
        "summary": "Ver todos os membros",
        "description": "Ver todos os membros cadastrados.",
        "tags": ["Member"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Membros encontrados com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewMembersResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar por membros"
          }
        }
      }
    },
    "/member/detail/{mbrid}": {
      "get": {
        "summary": "Mostrar todas as informações de um membro.",
        "description": "Mostrar detalhes de um membro.",
        "tags": ["Member"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mbrid",
            "in": "path",
            "required": true,
            "description": "Id do membro a ser encontrado.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Membro encontrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelo membro!"
          }
        }
      }
    },
    "/member/edit/{mbrid}": {
      "patch": {
        "summary": "Editar dados de um membro.",
        "description": "Editar dados de um membro pelo id.",
        "tags": ["Member"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mbrid",
            "in": "path",
            "required": true,
            "description": "ID do membro.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos opicionais para editar um membro",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/EditMemberRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Membro atualizado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/EditMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao atualizar o membro"
          }
        }
      }
    },
    "/member/delete/{mbrid}": {
      "delete": {
        "summary": "Deletar um membro.",
        "description": "Deletar um membro pelo code.",
        "tags": ["Member"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mbrid",
            "in": "path",
            "required": true,
            "description": "ID do membro.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Membro deletado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DeleteMemberResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao deletar o membro"
          }
        }
      }
    },
    "/material/register": {
      "post": {
        "summary": "Registrar um material",
        "description": "Registrar um material no aplicativo, incluindo o upload de uma imagem.",
        "tags": ["Material"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Campos para registrar um material",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#components/schemas/RegisterMaterialRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Material registrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterMaterialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar material"
          }
        }
      }
    },
    "/material/viewmaterials": {
      "get": {
        "summary": "Ver todos os materiais",
        "description": "Ver todos os materiais cadastrados.",
        "tags": ["Material"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Materiais encontrados com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewMaterialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar por materiais"
          }
        }
      }
    },
    "/material/detail/{code}": {
      "get": {
        "summary": "Mostrar todas as informações de um material.",
        "description": "Mostrar detalhes de um material.",
        "tags": ["Material"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "Code do material a ser encontrado.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Material encontrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailMaterialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelo material!"
          }
        }
      }
    },
    "/material/edit/{code}": {
      "patch": {
        "summary": "Editar um material",
        "description": "Editar um material no aplicativo, incluindo o upload de uma imagem.",
        "tags": ["Material"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "Code do material a ser encontrado.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos para registrar um material",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#components/schemas/EditMaterialRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Material editado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditMaterialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao editar material"
          }
        }
      }
    },
    "/material/delete/{code}": {
      "delete": {
        "summary": "Deletar um material.",
        "description": "Deletar um material pelo code.",
        "tags": ["Material"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "Code do material.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Material deletado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DeleteMaterialResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao deletar o material!"
          }
        }
      }
    },
    "/collection/register": {
      "post": {
        "summary": "Registrar uma coleção",
        "description": "Registrar uma coleçao no aplicativo.",
        "tags": ["Collection"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Campos para registrar uma coleção",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterCollectionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coleção registrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCollectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar coleção"
          }
        }
      }
    },
    "/collection/viewcollections": {
      "get": {
        "summary": "Ver todas as coleções",
        "description": "Ver todos as coleções cadastradas.",
        "tags": ["Collection"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Coleções encontradas com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewCollectionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar por coleções"
          }
        }
      }
    },
    "/collection/detail/{code}": {
      "get": {
        "summary": "Mostrar todas as informações de uma coleção.",
        "description": "Mostrar detalhes de uma coleção.",
        "tags": ["Collection"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "Code da coleção a ser encontrada.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Coleção encontrada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailCollectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pela coleção!"
          }
        }
      }
    },
    "/collection/edit/{code}": {
      "patch": {
        "summary": "Editar dados de uma coleção.",
        "description": "Editar dados de uma coleção pelo código.",
        "tags": ["Collection"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "Code da coleção.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos opicionais para editar uma coleção",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/EditCollectionRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coleção atualizada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/EditCollectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao atualizar a coleção!"
          }
        }
      }
    },
    "/collection/delete/{code}": {
      "delete": {
        "summary": "Deletar uma coleção.",
        "description": "Deletar uma coleção pelo code.",
        "tags": ["Collection"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "description": "Código da coleção a ser deletada.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Coleção deletada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DeleteCollectionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao deletar coleção"
          }
        }
      }
    },
    "/biblio/register": {
      "post": {
        "summary": "Registrar uma nova bibliografia",
        "description": "Registrar uma nova bibliografia no sistema.",
        "tags": ["Bibliography"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Campos para registrar uma nova bibliografia",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterBiblioRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bibliografia registrada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RegisterBiblioResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar bibliografia"
          }
        }
      }
    },
    "/biblio/search": {
      "get": {
        "summary": "Buscar por bibliografia(s)",
        "description": "Buscar bibliografia(s) pelo número do cartão, nome ou email.",
        "tags": ["Bibliography"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "method",
            "description": "Método de pesquisa (title, author, collection)",
            "schema": {
              "type": "string",
              "enum": ["title", "author", "collection"]
            }
          },
          {
            "in": "query",
            "name": "data",
            "description": "Valor para buscar (título, autor ou collection)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bibliografias encontradas com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/SearchBibliosResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar a bibliografia",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Erro ao buscar bibliografia."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/biblio/viewbiblios": {
      "get": {
        "summary": "Ver todas as bibliografias",
        "description": "Ver todos as bibliografias cadastradas.",
        "tags": ["Bibliography"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Bibliografias encontradas com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewBibliosResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar por bibliografias"
          }
        }
      }
    },
    "/biblio/detail/{bibid}": {
      "get": {
        "summary": "Mostrar todas as informações de uma bibliografia.",
        "description": "Mostrar detalhes de uma bibliografia.",
        "tags": ["Bibliography"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bibid",
            "in": "path",
            "required": true,
            "description": "Bibid da bibliografia a ser encontrada.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Bibliografia encontrada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailBiblioResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pela coleção!"
          }
        }
      }
    },
    "/biblio/edit/{bibid}": {
      "patch": {
        "summary": "Editar dados de uma bibliografia.",
        "description": "Editar dados de uma bibliografia pelo bibid.",
        "tags": ["Bibliography"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bibid",
            "in": "path",
            "required": true,
            "description": "Bibid da bibliografia.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos opicionais para editar uma bibliografia",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterBiblioRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coleção atualizada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/EditBiblioResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao atualizar a bibliografia!"
          }
        }
      }
    },
    "/biblio/delete/{bibid}": {
      "delete": {
        "summary": "Deletar uma bibliografia.",
        "description": "Deletar uma bibliografia pelo bibid.",
        "tags": ["Bibliography"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bibid",
            "in": "path",
            "required": true,
            "description": "Bibid da bibliografia.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Bibliografia deletada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DeleteBiblioResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao deletar a bibliografia!"
          }
        }
      }
    },
    "/checkprivs/viewcheckprivs": {
      "get": {
        "summary": "Ver todas as informações de permanência.",
        "description": "Ver todas as informações de permanência dos tipos de usuários com os materiais.",
        "tags": ["CheckoutPrivs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Informações de permanência dos materiais por tipo de usuário encontradas com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewCheckPrivsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar dados"
          }
        }
      }
    },
    "/checkprivs/detail/{id}": {
      "get": {
        "summary": "Ver as informações de permanência.",
        "description": "Ver as informações de permanência por id.",
        "tags": ["CheckoutPrivs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Informação de permanência dos materiais por tipo de usuário encontradas com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailCheckPrivsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pela coleção!"
          }
        }
      }
    },
    "/checkprivs/edit/{id}": {
      "patch": {
        "summary": "Editar dados de permanência de material.",
        "description": "Editar dados de permanência de um material pelo id.",
        "tags": ["CheckoutPrivs"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "id do checkoutpriv.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos opicionais para editar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterCheckPrivsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Informações de tempo de permanência com os material atualizado!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/RegisterCheckPrivsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao atualizar os dados!"
          }
        }
      }
    },
    "/bibliocopy/register/{bibid}": {
      "post": {
        "summary": "Registrar uma cópia bibliográfica.",
        "description": "Registrar uma cópia de uma bibliografia previamente registrada..",
        "tags": ["BiblioCopy"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bibid",
            "in": "path",
            "required": true,
            "description": "id da bibliografia.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos para registrar uma cópia",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterCopyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cópia cadastrada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCopyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao registrar coleção"
          }
        }
      }
    },
    "/bibliocopy/detail/{id}": {
      "get": {
        "summary": "Mostrar todas as informações de uma cópia.",
        "description": "Mostrar detalhes de uma cópia bibliográfica.",
        "tags": ["BiblioCopy"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id da cópia bibliográfica a ser encontrada.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cópia bibliográfica encontrada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DetailCopyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pela cópia!"
          }
        }
      }
    },
    "/bibliocopy/viewcopies": {
      "get": {
        "summary": "Ver todas as cópias de uma bibliografia",
        "description": "Ver todas as cópias de uma bibliografia",
        "tags": ["BiblioCopy"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "Cópias bibliográficas encontrados com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewCopiesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelas cópias."
          }
        }
      }
    },
    "/bibliocopy/edit/{id}": {
      "patch": {
        "summary": "Editar dados de uma cópia bibliográfica.",
        "description": "Editar dados de uma cópia bibliográfica.",
        "tags": ["BiblioCopy"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id da cópia.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos opicionais para editar uma cópia.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/EditCopyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Copia da bibliografia atualizada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/EditCopyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao atualizar a cópia!"
          }
        }
      }
    },
    "/bibliocopy/delete/{id}": {
      "delete": {
        "summary": "Deletar uma cópia bibliográfica.",
        "description": "Deletar uma cópia bibliográfica pelo id.",
        "tags": ["BiblioCopy"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Id da cópia a ser deletada.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Cópia bibliográfica deletada com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/DeleteCopyResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao deletar a cópia!"
          }
        }
      }
    },
    "/bibliohist/checkout/{mbrid}": {
      "post": {
        "summary": "Checkout de um livro.",
        "description": "Emprestar um livro para um membro",
        "tags": ["BiblioHist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mbrid",
            "in": "path",
            "required": true,
            "description": "Mbrid do membro.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos para realizar o checkout",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterBiblioHistRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Livro emprestado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCheckoutResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao fazer o checkout"
          }
        }
      }
    },
    "/bibliohist/checkin": {
      "post": {
        "summary": "Checkin de um livro.",
        "description": "Devolver um livro",
        "tags": ["BiblioHist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Campos para realizar o checkin",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterBiblioHistRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Livro devolovido com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterCheckinResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao fazer o checkout"
          }
        }
      }
    },
    "/bibliohist/renewal/{mbrid}": {
      "post": {
        "summary": "Renovar um livro.",
        "description": "Renovar um livro para um membro",
        "tags": ["BiblioHist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mbrid",
            "in": "path",
            "required": true,
            "description": "Mbrid do membro.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos para renovar o livro.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterBiblioHistRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Livro ronavado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterRenewalResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao renovar o livro"
          }
        }
      }
    },
    "/bibliohist/hold/{mbrid}": {
      "post": {
        "summary": "Reserva de um livro.",
        "description": "Reservar um livro para um membro",
        "tags": ["BiblioHist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mbrid",
            "in": "path",
            "required": true,
            "description": "Mbrid do membro.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Campos para reservar o livro.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#components/schemas/RegisterBiblioHistRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Livro ronavado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterHoldResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao renovar o livro"
          }
        }
      }
    },
    "/bibliohist/viewhist/{bibid}": {
      "get": {
        "summary": "Mostrar o histórico de checkout.",
        "description": "Mostrar o histórico de checkout por bibid.",
        "tags": ["BiblioHist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bibid",
            "in": "path",
            "required": true,
            "description": "Bibid bibliografia.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Histórico encontrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewHistResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelo histórico!"
          }
        }
      }
    },
    "/bibliohist/viewholds/{bibid}": {
      "get": {
        "summary": "Mostrar as reservas.",
        "description": "Mostrar as reservas por bibid.",
        "tags": ["BiblioHist"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "bibid",
            "in": "path",
            "required": true,
            "description": "Bibid bibliografia.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Histórico encontrado com sucesso!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#components/schemas/ViewHoldsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Erro ao buscar pelo histórico!"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "RegisterStaffRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "admin"
          },
          "last_name": {
            "type": "string",
            "example": "admin"
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          },
          "admin_flg": {
            "type": "boolean",
            "example": true
          },
          "circ_flg": {
            "type": "boolean",
            "example": true
          },
          "circ_mbr_flg": {
            "type": "boolean",
            "example": true
          },
          "catalog_flg": {
            "type": "boolean",
            "example": true
          },
          "reports_flg": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "RegisterStaffResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro da equipe registrado com sucesso!"
          },
          "registeredStaff": {
            "type": "object",
            "properties": {
              "userid": {
                "type": "number",
                "example": 1
              },
              "first_name": {
                "type": "string",
                "example": "admin"
              },
              "last_name": {
                "type": "string",
                "example": "admin"
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "admin_flg": {
                "type": "boolean",
                "example": true
              },
              "circ_flg": {
                "type": "boolean",
                "example": true
              },
              "circ_mbr_flg": {
                "type": "boolean",
                "example": true
              },
              "catalog_flg": {
                "type": "boolean",
                "example": true
              },
              "reports_flg": {
                "type": "boolean",
                "example": true
              },
              "suspended_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "LoginStaffRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "LoginStaffResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Usuário entrou com sucesso!"
          },
          "staffLogged": {
            "type": "object",
            "properties": {
              "userid": {
                "type": "number",
                "example": 1
              },
              "admin_flg": {
                "type": "boolean",
                "example": true
              },
              "token": {
                "type": "string"
              }
            }
          }
        }
      },
      "ViewStaffsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membros da equipe encontrados com sucesso!"
          },
          "staffs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userid": {
                  "type": "number",
                  "example": 1
                },
                "first_name": {
                  "type": "string",
                  "example": "admin"
                },
                "last_name": {
                  "type": "string",
                  "example": "admin"
                },
                "username": {
                  "type": "string",
                  "example": "admin"
                },
                "admin_flg": {
                  "type": "boolean",
                  "example": true
                },
                "circ_flg": {
                  "type": "boolean",
                  "example": true
                },
                "circ_mbr_flg": {
                  "type": "boolean",
                  "example": true
                },
                "catalog_flg": {
                  "type": "boolean",
                  "example": true
                },
                "reports_flg": {
                  "type": "boolean",
                  "example": true
                },
                "suspended_flg": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        }
      },
      "DetailStaffResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro da equipe encontrado com sucesso!"
          },
          "staff": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "example": "admin"
              },
              "last_name": {
                "type": "string",
                "example": "admin"
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "admin_flg": {
                "type": "boolean",
                "example": true
              },
              "circ_flg": {
                "type": "boolean",
                "example": true
              },
              "circ_mbr_flg": {
                "type": "boolean",
                "example": true
              },
              "catalog_flg": {
                "type": "boolean",
                "example": true
              },
              "reports_flg": {
                "type": "boolean",
                "example": true
              },
              "suspended_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "EditStaffRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "admin"
          },
          "last_name": {
            "type": "string",
            "example": "admin"
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "suspended_flg": {
            "type": "boolean",
            "example": false
          },
          "admin_flg": {
            "type": "boolean",
            "example": true
          },
          "circ_flg": {
            "type": "boolean",
            "example": true
          },
          "circ_mbr_flg": {
            "type": "boolean",
            "example": true
          },
          "catalog_flg": {
            "type": "boolean",
            "example": true
          },
          "reports_flg": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "EditStaffResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro da equipe atualizado com sucesso!"
          },
          "editedStaff": {
            "type": "object",
            "properties": {
              "userid": {
                "type": "number",
                "example": 1
              },
              "first_name": {
                "type": "string",
                "example": "admin"
              },
              "last_name": {
                "type": "string",
                "example": "admin"
              },
              "username": {
                "type": "string",
                "example": "admin"
              },
              "admin_flg": {
                "type": "boolean",
                "example": true
              },
              "circ_flg": {
                "type": "boolean",
                "example": true
              },
              "circ_mbr_flg": {
                "type": "boolean",
                "example": true
              },
              "catalog_flg": {
                "type": "boolean",
                "example": true
              },
              "reports_flg": {
                "type": "boolean",
                "example": true
              },
              "suspended_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "ChangeStaffPasswordRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        }
      },
      "ChangeStaffPasswordResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Senha alterada com sucesso!"
          }
        }
      },
      "DeleteStaffResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro da equipe deletado com sucesso!"
          }
        }
      },
      "RegisterMbrClassifyRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Professor"
          },
          "max_fines": {
            "type": "number",
            "example": 0
          }
        }
      },
      "RegisterMbrClassifyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Tipo de membro registrado com sucesso!"
          },
          "registeredClassify": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "Professor"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              },
              "max_fines": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "ViewClassifyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Tipos de membros da equipe encontrados com sucesso!"
          },
          "classifies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 1
                },
                "description": {
                  "type": "string",
                  "example": "Professor"
                },
                "default_flg": {
                  "type": "boolean",
                  "example": false
                },
                "max_fines": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "DetailClassifyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Tipo de membro da equipe encontrado com sucesso!"
          },
          "classify": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "Professor"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              },
              "max_fines": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "EditMbrClassifyRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Professor"
          },
          "max_fines": {
            "type": "number",
            "example": 0
          }
        }
      },
      "EditMbrClassifyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Tipo de membro da equipe atualizado com sucesso!"
          },
          "editedClassify": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "Professor"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              },
              "max_fines": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "DeleteCategoryResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Tipo de usuário deletado com sucesso!"
          }
        }
      },
      "RegisterMbrFieldRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "Professor"
          },
          "description": {
            "type": "string",
            "example": "professor"
          }
        }
      },
      "RegisterMbrFieldResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Campo de usuário registrado com sucesso!"
          },
          "registeredField": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "Professor"
              },
              "description": {
                "type": "string",
                "example": "Professor"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "ViewFieldsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Campos de usuários encontrados com sucesso!"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "example": "Professor"
                },
                "description": {
                  "type": "string",
                  "example": "Professor"
                },
                "default_flg": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        }
      },
      "DetailFieldResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Campo de usuário encontrado com sucesso!"
          },
          "field": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "example": "Professor"
              },
              "description": {
                "type": "string",
                "example": "Professor"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "EditMbrFieldRequest": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "Professor"
          },
          "description": {
            "type": "string",
            "example": "Professor"
          }
        }
      },
      "EditMbrFieldResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Campo de usuário atualizado com sucesso!"
          },
          "editedField": {
            "type": "object",
            "properties": {
              "code": {
                "type": "Professor",
                "example": "Professor"
              },
              "description": {
                "type": "string",
                "example": "Professor"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "DeleteFieldResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Campo de usuário deletado com sucesso!"
          }
        }
      },
      "RegisterMemberRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "João"
          },
          "last_name": {
            "type": "string",
            "example": "Oliveira"
          },
          "barcode_nmbr": {
            "type": "string",
            "example": "24101"
          },
          "address": {
            "type": "string",
            "example": "Av. Brasil, 801 - Remanso - Hortolândia/SP"
          },
          "home_phone": {
            "type": "string",
            "example": "(19) 99999-9999"
          },
          "work_phone": {
            "type": "string",
            "example": "(19) 99999-9999"
          },
          "email": {
            "type": "string",
            "example": "joao@gmail.com"
          },
          "code": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Aluno"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "1º MIA"
            }
          },
          "classification": {
            "type": "number",
            "example": 2
          }
        }
      },
      "RegisterMemberResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro registrado com sucesso!"
          },
          "registeredMember": {
            "type": "object",
            "properties": {
              "mbrid": {
                "type": "number",
                "example": 27
              },
              "first_name": {
                "type": "string",
                "example": "João"
              },
              "last_name": {
                "type": "string",
                "example": "Oliveira"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "24101"
              },
              "address": {
                "type": "string",
                "example": "Av. Brasil, 801 - Remanso - Hortolândia/SP"
              },
              "home_phone": {
                "type": "string",
                "example": "(19) 99999-9999"
              },
              "work_phone": {
                "type": "string",
                "example": "(19) 99999-9999"
              },
              "email": {
                "type": "string",
                "example": "joao@gmail.com"
              },
              "last_change_userid": {
                "type": "number",
                "example": 1
              },
              "classification": {
                "type": "number",
                "example": 2
              }
            }
          }
        }
      },
      "ViewMembersResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membros encontrados com sucesso!"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "mbrid": {
                  "type": "number",
                  "example": 27
                },
                "first_name": {
                  "type": "string",
                  "example": "João"
                },
                "last_name": {
                  "type": "string",
                  "example": "Oliveira"
                },
                "barcode_nmbr": {
                  "type": "string",
                  "example": "24101"
                },
                "address": {
                  "type": "string",
                  "example": "Av. Brasil, 801 - Remanso - Hortolândia/SP"
                },
                "home_phone": {
                  "type": "string",
                  "example": "(19) 99999-9999"
                },
                "work_phone": {
                  "type": "string",
                  "example": "(19) 99999-9999"
                },
                "email": {
                  "type": "string",
                  "example": "joao@gmail.com"
                },
                "last_change_userid": {
                  "type": "number",
                  "example": 1
                },
                "classification": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "DetailMemberResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro encontrado com sucesso!"
          },
          "member": {
            "type": "object",
            "properties": {
              "mbrid": {
                "type": "number",
                "example": 27
              },
              "first_name": {
                "type": "string",
                "example": "João"
              },
              "last_name": {
                "type": "string",
                "example": "Oliveira"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "24101"
              },
              "address": {
                "type": "string",
                "example": "Av. Brasil, 801 - Remanso - Hortolândia/SP"
              },
              "home_phone": {
                "type": "string",
                "example": "(19) 99999-9999"
              },
              "work_phone": {
                "type": "string",
                "example": "(19) 99999-9999"
              },
              "email": {
                "type": "string",
                "example": "joao@gmail.com"
              },
              "last_change_userid": {
                "type": "number",
                "example": 1
              },
              "classification": {
                "type": "number",
                "example": 2
              }
            }
          }
        }
      },
      "EditMemberRequest": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "João"
          },
          "last_name": {
            "type": "string",
            "example": "Oliveira"
          },
          "barcode_nmbr": {
            "type": "string",
            "example": "24101"
          },
          "address": {
            "type": "string",
            "example": "Av. Brasil, 801 - Remanso - Hortolândia/SP"
          },
          "home_phone": {
            "type": "string",
            "example": "(19) 99999-9999"
          },
          "work_phone": {
            "type": "string",
            "example": "(19) 99999-9999"
          },
          "email": {
            "type": "string",
            "example": "joao@gmail.com"
          },
          "code": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Aluno"
            }
          },
          "data": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "1º MIA"
            }
          },
          "classification": {
            "type": "number",
            "example": 2
          }
        }
      },
      "EditMemberResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro atualizado com sucesso!"
          },
          "editedMember": {
            "type": "object",
            "properties": {
              "mbrid": {
                "type": "number",
                "example": 27
              },
              "first_name": {
                "type": "string",
                "example": "João"
              },
              "last_name": {
                "type": "string",
                "example": "Oliveira"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "24101"
              },
              "address": {
                "type": "string",
                "example": "Av. Brasil, 801 - Remanso - Hortolândia/SP"
              },
              "home_phone": {
                "type": "string",
                "example": "(19) 99999-9999"
              },
              "work_phone": {
                "type": "string",
                "example": "(19) 99999-9999"
              },
              "email": {
                "type": "string",
                "example": "joao@gmail.com"
              },
              "last_change_userid": {
                "type": "number",
                "example": 1
              },
              "classification": {
                "type": "number",
                "example": 2
              }
            }
          }
        }
      },
      "DeleteMemberResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro deletado com sucesso!"
          }
        }
      },
      "FindMemberRequest": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "Cauã"
          },
          "method": {
            "type": "string",
            "example": "name"
          }
        }
      },
      "FindMemberResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Membro encontrado com sucesso!"
          },
          "members": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "mbrid": {
                  "type": "number",
                  "example": 27
                },
                "first_name": {
                  "type": "string",
                  "example": "João"
                },
                "last_name": {
                  "type": "string",
                  "example": "Oliveira"
                },
                "barcode_nmbr": {
                  "type": "string",
                  "example": "24101"
                },
                "address": {
                  "type": "string",
                  "example": "Av. Brasil, 801 - Remanso - Hortolândia/SP"
                },
                "home_phone": {
                  "type": "string",
                  "example": "(19) 99999-9999"
                },
                "work_phone": {
                  "type": "string",
                  "example": "(19) 99999-9999"
                },
                "email": {
                  "type": "string",
                  "example": "joao@gmail.com"
                },
                "last_change_userid": {
                  "type": "number",
                  "example": 1
                },
                "classification": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        }
      },
      "RegisterMaterialRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "book"
          },
          "image_file": {
            "type": "string",
            "format": "binary",
            "example": null
          }
        }
      },
      "RegisterMaterialResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Material registrado com sucesso!"
          },
          "registeredMaterial": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "book"
              },
              "image_file": {
                "type": "string",
                "example": "418.419572646945651728061264265.png"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "ViewMaterialResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Materiais encontrados com sucesso!"
          },
          "materials": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 1
                },
                "description": {
                  "type": "string",
                  "example": "book"
                },
                "image_file": {
                  "type": "string",
                  "example": "418.419572646945651728061264265.png"
                },
                "default_flg": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        }
      },
      "DetailMaterialResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Material encontrado com sucesso!"
          },
          "member": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "book"
              },
              "image_file": {
                "type": "string",
                "example": "418.419572646945651728061264265.png"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "EditMaterialRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "book"
          },
          "image_file": {
            "type": "string",
            "format": "binary",
            "example": null
          }
        }
      },
      "EditMaterialResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Material editado com sucesso!"
          },
          "editedMaterial": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "book"
              },
              "image_file": {
                "type": "string",
                "example": "418.419572646945651728061264265.png"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      },
      "DeleteMaterialResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Material deletado com sucesso!"
          }
        }
      },
      "RegisterCollectionRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Engenharia de Software"
          },
          "days_due_back": {
            "type": "number",
            "example": 15
          },
          "daily_late_fee": {
            "type": "number",
            "example": 0
          }
        }
      },
      "RegisterCollectionResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Coleção registrada com sucesso!"
          },
          "registeredCollection": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "Engenharia de Software"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              },
              "days_due_back": {
                "type": "number",
                "example": 15
              },
              "daily_late_fee": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "ViewCollectionsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Coleções encontradas com sucesso!"
          },
          "collections": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "number",
                  "example": 1
                },
                "description": {
                  "type": "string",
                  "example": "Engenharia de Software"
                },
                "default_flg": {
                  "type": "boolean",
                  "example": false
                },
                "days_due_back": {
                  "type": "number",
                  "example": 15
                },
                "daily_late_fee": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "DetailCollectionResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Coleção encontrada com sucesso!"
          },
          "collection": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "Engenharia de Software"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              },
              "days_due_back": {
                "type": "number",
                "example": 15
              },
              "daily_late_fee": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "EditCollectionRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Engenharia de Dados"
          },
          "days_due_back": {
            "type": "number",
            "example": 15
          },
          "daily_late_fee": {
            "type": "number",
            "example": 0
          }
        }
      },
      "EditCollectionResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Coleção atualizada com sucesso!"
          },
          "editedField": {
            "type": "object",
            "properties": {
              "code": {
                "type": "number",
                "example": 1
              },
              "description": {
                "type": "string",
                "example": "Engenharia de Software"
              },
              "default_flg": {
                "type": "boolean",
                "example": false
              },
              "days_due_back": {
                "type": "number",
                "example": 15
              },
              "daily_late_fee": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "DeleteCollectionResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Coleção deletada com sucesso!"
          }
        }
      },
      "RegisterBiblioRequest": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "example": "Moby Dick" },
          "title_remainder": { "type": "string", "example": "or, The Whale" },
          "author": { "type": "string", "example": "Herman Melville" },
          "responsibility_stmt": {
            "type": "string",
            "example": "Written by Herman Melville"
          },
          "material_cd": { "type": "number", "example": 2 },
          "collection_cd": { "type": "number", "example": 82 },
          "call_nmbr1": { "type": "string", "example": "FIC" },
          "call_nmbr2": { "type": "string", "example": "MEL" },
          "call_nmbr3": { "type": "string", "example": "1851" },
          "topic1": { "type": "string", "example": "Whaling" },
          "topic2": { "type": "string", "example": "Adventure" },
          "topic3": { "type": "string", "example": "Sea Stories" },
          "topic4": { "type": "string", "example": "Classic Literature" },
          "topic5": { "type": "string", "example": "American Fiction" },
          "last_change_userid": { "type": "number", "example": 12345 },
          "opac_flg": { "type": "boolean", "example": true },
          "values": {
            "type": "object",
            "properties": {
              "245a": { "type": "string", "example": "Moby Dick" },
              "245b": { "type": "string", "example": "or, The Whale" },
              "245c": { "type": "string", "example": "Herman Melville" },
              "100a": { "type": "string", "example": "Herman Melville" },
              "650a": { "type": "string", "example": "Whaling" },
              "650a1": { "type": "string", "example": "Adventure" },
              "650a2": { "type": "string", "example": "Sea Stories" },
              "650a3": { "type": "string", "example": "Classic Literature" },
              "650a4": { "type": "string", "example": "American Fiction" },
              "250a": { "type": "string", "example": "First Edition" },
              "010a": { "type": "string", "example": "123456789" },
              "020a": { "type": "string", "example": "978-0-14-243724-7" },
              "050a": { "type": "string", "example": "PS2384.M6" },
              "050b": { "type": "string", "example": "A14" },
              "082a": { "type": "string", "example": "813.3" },
              "0822": { "type": "string", "example": "23" },
              "260a": { "type": "string", "example": "New York" },
              "260b": { "type": "string", "example": "Harper & Brothers" },
              "260c": { "type": "string", "example": "1851" },
              "520a": {
                "type": "string",
                "example": "A narrative of the whaling voyage of Captain Ahab, who seeks revenge on the great white whale."
              },
              "300a": { "type": "string", "example": "635 pages" },
              "300b": { "type": "string", "example": "Illustrations" },
              "300c": { "type": "string", "example": "23 cm" },
              "300e": { "type": "string", "example": "None" },
              "020c": { "type": "string", "example": "Available" },
              "541h": { "type": "string", "example": "$12.99" }
            }
          },
          "indexes": {
            "type": "array",
            "items": { "type": "string" },
            "example": [
              "245a",
              "245b",
              "245c",
              "100a",
              "650a",
              "650a1",
              "650a2",
              "650a3",
              "650a4",
              "250a",
              "010a",
              "020a",
              "050a",
              "050b",
              "082a",
              "0822",
              "260a",
              "260b",
              "260c",
              "520a",
              "300a",
              "300b",
              "300c",
              "300e",
              "020c",
              "541h"
            ]
          },
          "tags": {
            "type": "object",
            "example": {
              "245a": "245",
              "245b": "245",
              "245c": "245",
              "100a": "100",
              "650a": "650",
              "650a1": "650",
              "650a2": "650",
              "650a3": "650",
              "650a4": "650",
              "250a": "250",
              "010a": "10",
              "020a": "20",
              "050a": "50",
              "050b": "50",
              "082a": "82",
              "0822": "82",
              "260a": "260",
              "260b": "260",
              "260c": "260",
              "520a": "520",
              "300a": "300",
              "300b": "300",
              "300c": "300",
              "300e": "300",
              "020c": "20",
              "541h": "541"
            }
          },
          "subfields": {
            "type": "object",
            "example": {
              "245a": "a",
              "245b": "b",
              "245c": "c",
              "100a": "a",
              "650a": "a",
              "650a1": "a",
              "650a2": "a",
              "650a3": "a",
              "650a4": "a",
              "250a": "a",
              "010a": "a",
              "020a": "a",
              "050a": "a",
              "050b": "b",
              "082a": "a",
              "0822": "2",
              "260a": "a",
              "260b": "b",
              "260c": "c",
              "520a": "a",
              "300a": "a",
              "300b": "b",
              "300c": "c",
              "300e": "e",
              "020c": "c",
              "541h": "h"
            }
          },
          "fieldIds": {
            "type": "object",
            "example": {
              "245a": "",
              "245b": "",
              "245c": "",
              "100a": "",
              "650a": "",
              "650a1": "",
              "650a2": "",
              "650a3": "",
              "650a4": "",
              "250a": "",
              "010a": "",
              "020a": "",
              "050a": "",
              "050b": "",
              "082a": "",
              "0822": "",
              "260a": "",
              "260b": "",
              "260c": "",
              "520a": "",
              "300a": "",
              "300b": "",
              "300c": "",
              "300e": "",
              "020c": "",
              "541h": ""
            }
          },
          "requiredFlgs": {
            "type": "object",
            "example": {
              "245a": "1",
              "245b": "",
              "245c": "",
              "100a": "1",
              "650a": "",
              "650a1": "",
              "650a2": "",
              "650a3": "",
              "650a4": "",
              "250a": "",
              "010a": "",
              "020a": "",
              "050a": "",
              "050b": "",
              "082a": "",
              "0822": "",
              "260a": "",
              "260b": "",
              "260c": "",
              "520a": "",
              "300a": "",
              "300b": "",
              "300c": "",
              "300e": "",
              "020c": "",
              "541h": ""
            }
          }
        }
      },
      "RegisterBiblioResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Bibliografia registrada com sucesso!"
          },
          "registeredBibliography": {
            "type": "object",
            "properties": {
              "bibid": { "type": "number", "example": 1 },
              "title": { "type": "string", "example": "Moby Dick" },
              "title_remainder": {
                "type": "string",
                "example": "or, The Whale"
              },
              "author": { "type": "string", "example": "Herman Melville" },
              "responsibility_stmt": {
                "type": "string",
                "example": "Written by Herman Melville"
              },
              "material_cd": { "type": "number", "example": 2 },
              "collection_cd": { "type": "number", "example": 82 },
              "call_nmbr1": { "type": "string", "example": "FIC" },
              "call_nmbr2": { "type": "string", "example": "MEL" },
              "call_nmbr3": { "type": "string", "example": "1851" },
              "topic1": { "type": "string", "example": "Whaling" },
              "topic2": { "type": "string", "example": "Adventure" },
              "topic3": { "type": "string", "example": "Sea Stories" },
              "topic4": { "type": "string", "example": "Classic Literature" },
              "topic5": { "type": "string", "example": "American Fiction" },
              "last_change_userid": { "type": "number", "example": 12345 },
              "opac_flg": { "type": "boolean", "example": true }
            }
          }
        }
      },
      "SearchBibliosResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Bibliografias encontradas com sucesso!"
          },
          "biblios": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bibid": { "type": "number", "example": 1 },
                "title": { "type": "string", "example": "Moby Dick" },
                "title_remainder": {
                  "type": "string",
                  "example": "or, The Whale"
                },
                "author": { "type": "string", "example": "Herman Melville" },
                "responsibility_stmt": {
                  "type": "string",
                  "example": "Written by Herman Melville"
                },
                "material_cd": { "type": "number", "example": 2 },
                "collection_cd": { "type": "number", "example": 82 },
                "call_nmbr1": { "type": "string", "example": "FIC" },
                "call_nmbr2": { "type": "string", "example": "MEL" },
                "call_nmbr3": { "type": "string", "example": "1851" },
                "topic1": { "type": "string", "example": "Whaling" },
                "topic2": { "type": "string", "example": "Adventure" },
                "topic3": { "type": "string", "example": "Sea Stories" },
                "topic4": { "type": "string", "example": "Classic Literature" },
                "topic5": { "type": "string", "example": "American Fiction" },
                "last_change_userid": { "type": "number", "example": 12345 },
                "opac_flg": { "type": "boolean", "example": true },
                "biblio_copy": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "bibid": {
                      "type": "number",
                      "example": 1
                    },
                    "copyid": {
                      "type": "number",
                      "example": 1
                    },
                    "create_dt": {
                      "type": "string",
                      "example": "2024-10-14T13:17:09.686Z"
                    },
                    "copy_desc": {
                      "type": "string",
                      "example": "Primeira cópia do Moby Dick"
                    },
                    "barcode_nmbr": {
                      "type": "string",
                      "example": "1234"
                    },
                    "status_cd": {
                      "type": "string",
                      "example": "in"
                    },
                    "status_begin_dt": {
                      "type": "string",
                      "example": "2024-10-14T13:17:09.686Z"
                    },
                    "due_back_dt": {
                      "type": "string",
                      "example": "2024-10-30T13:17:09.686Z"
                    },
                    "mbrid": {
                      "type": "number",
                      "example": 1
                    },
                    "renewal_count": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ViewBibliosResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Bibliografias encontradas com sucesso!"
          },
          "biblios": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bibid": { "type": "number", "example": 1 },
                "title": { "type": "string", "example": "Moby Dick" },
                "title_remainder": {
                  "type": "string",
                  "example": "or, The Whale"
                },
                "author": { "type": "string", "example": "Herman Melville" },
                "responsibility_stmt": {
                  "type": "string",
                  "example": "Written by Herman Melville"
                },
                "material_cd": { "type": "number", "example": 2 },
                "collection_cd": { "type": "number", "example": 82 },
                "call_nmbr1": { "type": "string", "example": "FIC" },
                "call_nmbr2": { "type": "string", "example": "MEL" },
                "call_nmbr3": { "type": "string", "example": "1851" },
                "topic1": { "type": "string", "example": "Whaling" },
                "topic2": { "type": "string", "example": "Adventure" },
                "topic3": { "type": "string", "example": "Sea Stories" },
                "topic4": { "type": "string", "example": "Classic Literature" },
                "topic5": { "type": "string", "example": "American Fiction" },
                "last_change_userid": { "type": "number", "example": 12345 },
                "opac_flg": { "type": "boolean", "example": true }
              }
            }
          }
        }
      },
      "DetailBiblioResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Bibliografia encontrada com sucesso!"
          },
          "biblio": {
            "type": "object",
            "properties": {
              "bibid": { "type": "number", "example": 1 },
              "title": { "type": "string", "example": "Moby Dick" },
              "title_remainder": {
                "type": "string",
                "example": "or, The Whale"
              },
              "author": { "type": "string", "example": "Herman Melville" },
              "responsibility_stmt": {
                "type": "string",
                "example": "Written by Herman Melville"
              },
              "material_cd": { "type": "number", "example": 2 },
              "collection_cd": { "type": "number", "example": 82 },
              "call_nmbr1": { "type": "string", "example": "FIC" },
              "call_nmbr2": { "type": "string", "example": "MEL" },
              "call_nmbr3": { "type": "string", "example": "1851" },
              "topic1": { "type": "string", "example": "Whaling" },
              "topic2": { "type": "string", "example": "Adventure" },
              "topic3": { "type": "string", "example": "Sea Stories" },
              "topic4": { "type": "string", "example": "Classic Literature" },
              "topic5": { "type": "string", "example": "American Fiction" },
              "last_change_userid": { "type": "number", "example": 12345 },
              "opac_flg": { "type": "boolean", "example": true },
              "biblio_fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "number", "example": 2 },
                    "fieldid": { "type": "number", "example": 10 },
                    "bibid": { "type": "number", "example": 2 },
                    "tag": { "type": "number", "example": 245 },
                    "ind1_cd": { "type": "string", "example": "N" },
                    "ind2_cd": { "type": "string", "example": "N" },
                    "subfield_cd": { "type": "string", "example": "a" },
                    "field_data": { "type": "string", "example": "Moby Dick" }
                  }
                }
              }
            }
          }
        }
      },
      "EditBiblioResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Bibliografia atualizada com sucesso!"
          },
          "editedBibliography": {
            "type": "object",
            "properties": {
              "bibid": { "type": "number", "example": 1 },
              "title": { "type": "string", "example": "Moby Dick" },
              "title_remainder": {
                "type": "string",
                "example": "or, The Whale"
              },
              "author": { "type": "string", "example": "Herman Melville" },
              "responsibility_stmt": {
                "type": "string",
                "example": "Written by Herman Melville"
              },
              "material_cd": { "type": "number", "example": 2 },
              "collection_cd": { "type": "number", "example": 82 },
              "call_nmbr1": { "type": "string", "example": "FIC" },
              "call_nmbr2": { "type": "string", "example": "MEL" },
              "call_nmbr3": { "type": "string", "example": "1851" },
              "topic1": { "type": "string", "example": "Whaling" },
              "topic2": { "type": "string", "example": "Adventure" },
              "topic3": { "type": "string", "example": "Sea Stories" },
              "topic4": { "type": "string", "example": "Classic Literature" },
              "topic5": { "type": "string", "example": "American Fiction" },
              "last_change_userid": { "type": "number", "example": 12345 },
              "opac_flg": { "type": "boolean", "example": true }
            }
          }
        }
      },
      "DeleteBiblioResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Bibliografia deletada com sucesso!"
          }
        }
      },
      "RegisterCheckPrivsRequest": {
        "type": "object",
        "properties": {
          "checkout_limit": {
            "type": "number",
            "example": 20
          },
          "renewal_limit": {
            "type": "number",
            "example": 5
          }
        }
      },
      "RegisterCheckPrivsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Informações de tempo de permanência com os material atualizado!"
          },
          "EditedCheckPrivs": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "material_cd": {
                "type": "number",
                "example": 1
              },
              "classification": {
                "type": "number",
                "example": 2
              },
              "checkout_limit": {
                "type": "number",
                "example": 20
              },
              "renewal_limit": {
                "type": "number",
                "example": 5
              }
            }
          }
        }
      },
      "ViewCheckPrivsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Informações de permanência dos materiais por tipo de usuário encontradas com sucesso!"
          },
          "checkprivs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "material_cd": {
                  "type": "number",
                  "example": 1
                },
                "classification": {
                  "type": "number",
                  "example": 2
                },
                "checkout_limit": {
                  "type": "number",
                  "example": 20
                },
                "renewal_limit": {
                  "type": "number",
                  "example": 5
                }
              }
            }
          }
        }
      },
      "DetailCheckPrivsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Informação de permanência dos materiais por tipo de usuário encontrada com sucesso!"
          },
          "checkpriv": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "material_cd": {
                "type": "number",
                "example": 1
              },
              "classification": {
                "type": "number",
                "example": 2
              },
              "checkout_limit": {
                "type": "number",
                "example": 20
              },
              "renewal_limit": {
                "type": "number",
                "example": 5
              }
            }
          }
        }
      },
      "RegisterCopyRequest": {
        "type": "object",
        "properties": {
          "barcode_nmbr": {
            "type": "string",
            "example": "1234"
          },
          "copy_desc": {
            "type": "string",
            "example": "Primeira cópia do Moby Dick"
          }
        }
      },
      "RegisterCopyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Cópia cadastrada com sucesso!"
          },
          "registeredCopy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "bibid": {
                "type": "number",
                "example": 1
              },
              "copyid": {
                "type": "number",
                "example": 1
              },
              "create_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "copy_desc": {
                "type": "string",
                "example": "Primeira cópia do Moby Dick"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "1234"
              },
              "status_cd": {
                "type": "string",
                "example": "in"
              },
              "status_begin_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "due_back_dt": {
                "type": "string",
                "example": "2024-10-30T13:17:09.686Z"
              },
              "mbrid": {
                "type": "number",
                "example": 1
              },
              "renewal_count": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "DetailCopyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Cópia bibliográfica encontrada com sucesso!"
          },
          "copy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "bibid": {
                "type": "number",
                "example": 1
              },
              "copyid": {
                "type": "number",
                "example": 1
              },
              "create_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "copy_desc": {
                "type": "string",
                "example": "Primeira cópia do Moby Dick"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "1234"
              },
              "status_cd": {
                "type": "string",
                "example": "in"
              },
              "status_begin_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "due_back_dt": {
                "type": "string",
                "example": "2024-10-30T13:17:09.686Z"
              },
              "mbrid": {
                "type": "number",
                "example": 1
              },
              "renewal_count": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "ViewCopiesResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Cópias bibliográficas encontradas com sucesso!"
          },
          "copies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "bibid": {
                  "type": "number",
                  "example": 1
                },
                "copyid": {
                  "type": "number",
                  "example": 1
                },
                "create_dt": {
                  "type": "string",
                  "example": "2024-10-14T13:17:09.686Z"
                },
                "copy_desc": {
                  "type": "string",
                  "example": "Primeira cópia do Moby Dick"
                },
                "barcode_nmbr": {
                  "type": "string",
                  "example": "1234"
                },
                "status_cd": {
                  "type": "string",
                  "example": "in"
                },
                "status_begin_dt": {
                  "type": "string",
                  "example": "2024-10-14T13:17:09.686Z"
                },
                "due_back_dt": {
                  "type": "string",
                  "example": "2024-10-30T13:17:09.686Z"
                },
                "mbrid": {
                  "type": "number",
                  "example": 1
                },
                "renewal_count": {
                  "type": "number",
                  "example": 0
                }
              }
            }
          }
        }
      },
      "EditCopyRequest": {
        "type": "object",
        "properties": {
          "copy_desc": {
            "type": "string",
            "example": "Segunda cópia do Moby Dick"
          },
          "barcode_nmbr": {
            "type": "string",
            "example": "1235"
          },
          "status_cd": {
            "type": "string",
            "example": "hld"
          }
        }
      },
      "EditCopyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Copia da bibliografia atualizada com sucesso!"
          },
          "editedCopy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "bibid": {
                "type": "number",
                "example": 1
              },
              "copyid": {
                "type": "number",
                "example": 1
              },
              "create_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "copy_desc": {
                "type": "string",
                "example": "Primeira cópia do Moby Dick"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "1234"
              },
              "status_cd": {
                "type": "string",
                "example": "in"
              },
              "status_begin_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "due_back_dt": {
                "type": "string",
                "example": "2024-10-30T13:17:09.686Z"
              },
              "mbrid": {
                "type": "number",
                "example": 1
              },
              "renewal_count": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "DeleteCopyResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Cópia bibliográfica deletada com sucesso!"
          }
        }
      },
      "RegisterBiblioHistRequest": {
        "type": "object",
        "properties": {
          "barcode_nmbr": {
            "type": "string",
            "example": "1234"
          }
        }
      },
      "RegisterCheckoutResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Livro emprestado com sucesso!"
          },
          "registeredCopy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "bibid": {
                "type": "number",
                "example": 1
              },
              "copyid": {
                "type": "number",
                "example": 1
              },
              "create_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "copy_desc": {
                "type": "string",
                "example": "Primeira cópia do Moby Dick"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "1234"
              },
              "status_cd": {
                "type": "string",
                "example": "in"
              },
              "status_begin_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "due_back_dt": {
                "type": "string",
                "example": "2024-10-30T13:17:09.686Z"
              },
              "mbrid": {
                "type": "number",
                "example": 1
              },
              "renewal_count": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "RegisterCheckinResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Livro devolvido com sucesso!"
          },
          "registeredCopy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "bibid": {
                "type": "number",
                "example": 1
              },
              "copyid": {
                "type": "number",
                "example": 1
              },
              "create_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "copy_desc": {
                "type": "string",
                "example": "Primeira cópia do Moby Dick"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "1234"
              },
              "status_cd": {
                "type": "string",
                "example": "in"
              },
              "status_begin_dt": {
                "type": "string",
                "example": null
              },
              "due_back_dt": {
                "type": "string",
                "example": null
              },
              "mbrid": {
                "type": "number",
                "example": null
              },
              "renewal_count": {
                "type": "number",
                "example": 0
              }
            }
          }
        }
      },
      "RegisterRenewalResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Livro renovado com sucesso!"
          },
          "registeredCopy": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "bibid": {
                "type": "number",
                "example": 1
              },
              "copyid": {
                "type": "number",
                "example": 1
              },
              "create_dt": {
                "type": "string",
                "example": "2024-10-14T13:17:09.686Z"
              },
              "copy_desc": {
                "type": "string",
                "example": "Primeira cópia do Moby Dick"
              },
              "barcode_nmbr": {
                "type": "string",
                "example": "1234"
              },
              "status_cd": {
                "type": "string",
                "example": "in"
              },
              "status_begin_dt": {
                "type": "string",
                "example": null
              },
              "due_back_dt": {
                "type": "string",
                "example": null
              },
              "mbrid": {
                "type": "number",
                "example": null
              },
              "renewal_count": {
                "type": "number",
                "example": 1
              }
            }
          }
        }
      },
      "RegisterHoldResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Livro em espera com sucesso!"
          },
          "held": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "holdid": {
                "type": "number",
                "example": 1
              },
              "copyid": {
                "type": "number",
                "example": 1
              },
              "mbrid": {
                "type": "number",
                "example": 14
              }
            }
          }
        }
      },
      "ViewHistResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Histórico encontrado com sucesso!"
          },
          "foundHist": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "holdid": {
                  "type": "number",
                  "example": 1
                },
                "copyid": {
                  "type": "number",
                  "example": 1
                },
                "mbrid": {
                  "type": "number",
                  "example": 1
                },
                "bibid": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        }
      },
      "ViewHoldsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Histórico de reservas encontrado com sucesso!"
          },
          "foundHist": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "holdid": {
                  "type": "number",
                  "example": 1
                },
                "copyid": {
                  "type": "number",
                  "example": 1
                },
                "mbrid": {
                  "type": "number",
                  "example": 1
                },
                "bibid": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        }
      }
    }
  }
}
